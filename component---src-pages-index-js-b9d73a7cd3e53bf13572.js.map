{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Home","data","css","indexData","byline","bp","small","bio","className","to","colors","textColorGrey","projects","map","project","index","color","textColorPrimaryInverse","title","description","gitLink","href","target","rel","icon","faLink","alt","playLink","src","imgStyle","objectFit","fluid","allFile","edges","key","node","childImageSharp","query"],"mappings":"o1BAWe,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC3B,OACI,YAAC,IAAD,KACI,mBAAKC,IAAG,GACJ,kBAAKA,IAAG,GAGJC,EAAUC,QAEd,mBAAKF,IAAG,GAYJ,mBAAKA,IAAKA,YAAF,sCAGiBG,IAAGC,MAHpB,2BAOJ,iBAAGJ,IAAG,GAA+BC,EAAUI,KAC/C,YAAC,OAAD,CAAMC,UAAU,YAAYC,GAAG,SAC3BP,IAAKA,YAAF,SAAeQ,IAAOC,gBAD7B,kBAIHR,EAAUS,SAASC,KAAI,SAACC,EAASC,GAC9B,OACI,mBAAKb,IAAKA,YAAF,oBACgBY,EAAQE,MADxB,mCAGKN,IAAOO,wBAHZ,sCAOJ,kBAAIf,IAAKA,YAAF,SAAeQ,IAAOO,wBAAtB,0BAAyEH,EAAQI,OACxF,kBAAIhB,IAAKA,YAAF,oBACiBQ,IAAOO,wBADxB,+CAOP,iBAAGf,IAAG,GAAyBY,EAAQK,aACvC,iBAAGjB,IAAKA,YAAF,WAC8B,KAApBY,EAAQM,QAAiB,OAAS,UAE9C,iBAAGC,KAAMP,EAAQM,QAASE,OAAO,SAASC,IAAI,aAAarB,IAAKA,YAAF,SACjDQ,IAAOO,wBAD0C,yCAA9D,0BAQU,YAAC,IAAD,CAAiBO,KAAMC,IAAQC,IAAI,4BAIjD,mBAAKxB,IAAG,GAMJ,iBAAGA,IAAKA,YAAF,WAC+B,KAArBY,EAAQa,SAAkB,OAAS,gBAChDN,KAAMP,EAAQa,UACb,mBAAKD,IAAI,wBACLxB,IAAG,EAIH0B,IAAI,8FAIhB,YAAC,IAAD,CAAK1B,IAAG,EACJ2B,SAAU,CAAEC,UAAU,WACtBC,MAAO9B,EAAK+B,QAAQC,MAAMnB,EAAQoB,KAAKC,KAAKC,gBAAgBL,MAC5DL,IAAI,gCAUjC,IAAMW,EAAK,c","file":"component---src-pages-index-js-b9d73a7cd3e53bf13572.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { css } from '@emotion/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\nimport Layout from '../components/layout.js'\nimport indexData from '../../content/index.json'\nimport { colors } from '../utils/colors.js'\nimport { bp } from '../utils/breakpoints.js'\n\nexport default function Home({ data }) {\n    return (\n        <Layout>\n            <div css={css`padding: 1.2rem`}>\n                <h2  css={css`\n                    text-align: center;\n                    margin-top: 3.5rem;\n                `}>{indexData.byline}</h2>\n\n                <div css={css`\n                    max-width: 960px;\n                    min-height: 0;\n                    margin: 5rem auto 0 auto;\n\n                    columns: 2 250px;\n                    column-gap: 2rem;\n\n                    & div {\n                        margin-top: 2rem;\n                    }\n                `}>\n                    <div css={css`\n                        text-align: right;\n\n                        @media (min-width: ${bp.small}px) {\n                            padding-top: 5rem;\n                        }\n                    `}>\n                        <p css={css`margin-bottom: 0.6rem`}>{indexData.bio}</p>\n                        <Link className=\"hoverable\" to=\"/about\"\n                            css={css`color: ${colors.textColorGrey}`}>More about me</Link>\n                    </div>\n\n                    {indexData.projects.map((project, index) => {\n                        return (\n                            <div css={css`\n                                background-color: ${project.color};\n                                padding: 2rem 2rem 0 2rem;\n                                color: ${colors.textColorPrimaryInverse};\n                                width: 100%;\n                                display: inline-block;\n                            `}>\n                                <h4 css={css`color: ${colors.textColorPrimaryInverse}; margin-bottom: 0.6rem`}>{project.title}</h4>\n                                <hr css={css`\n                                    background-color: ${colors.textColorPrimaryInverse};\n                                    height: 3px;\n                                    width: 30px;\n                                    border-radius: 5px;\n                                `} />\n\n                                <p css={css`max-width: 12em`}>{project.description}</p>\n                                <p css={css`\n                                    display: ${ project.gitLink === \"\" ? \"none\" : \"block\" }\n                                `}>\n                                    <a href={project.gitLink} target=\"_blank\" rel=\"noreferrer\" css={css`\n                                        color: ${colors.textColorPrimaryInverse};\n\n                                        &:hover {\n                                            text-decoration: underline;\n                                        }\n                                    `}>\n                                        View Source on Github\n                                        &nbsp;<FontAwesomeIcon icon={faLink} alt=\"Link opens in new tab\" />\n                                    </a>\n                                </p>\n\n                                <div css={css`\n                                    display: flex;\n                                    flex-direction: row;\n                                    justify-content: flex-start;\n                                    margin-bottom: 4rem;\n                                `}>\n                                    <a css={css`\n                                        display: ${ project.playLink === \"\" ? \"none\" : \"inline-block\" }\n                                    `} href={project.playLink}>\n                                        <img alt='Get it on Google Play' \n                                            css={css`\n                                                margin: 0;\n                                                height: 3rem;\n                                            `}\n                                            src='https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png'/>\n                                    </a>\n                                </div>\n\n                                <Img css={css`max-height: 400px`} \n                                    imgStyle={{ objectFit: `contain` }}\n                                    fluid={data.allFile.edges[project.key].node.childImageSharp.fluid} \n                                    alt=\"Project Sample Image\" />\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query {\n        allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n            edges {\n                node {\n                    childImageSharp {\n                        fluid {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}